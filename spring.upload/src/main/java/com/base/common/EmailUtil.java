package com.base.common;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import java.util.Properties;


public class EmailUtil {

	private  static Logger logger = LoggerFactory.getLogger(EmailUtil.class);
	
	public EmailUtil(){
    }
	
	public void sendEmail(String subject, StringBuffer body, String mailhost, String from, String to, String cc)
    {
        try
        {
           
            Properties props = System.getProperties();
            props.put("mail.smtp.host", mailhost);
            Session session = Session.getInstance(props, null);
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(from));
            message.addRecipient(javax.mail.Message.RecipientType.TO, new InternetAddress(to));
            if(!cc.equalsIgnoreCase("null"))
            {
                message.addRecipient(javax.mail.Message.RecipientType.CC, new InternetAddress(cc));
            }
            message.setSubject(subject);
            message.setContent(body.toString(), "text/html");
            Transport.send(message);
            logger.info("Email sent successfully to " +to);
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
	
	
	public void sendEmailWithJobStatus(int i, String mailhost, String from,String to, String cc, String subject, String jobname, String logfilepath, String logfilename)
    {
        logger.info("Sending email with job status ...");
        try
        {
            Properties properties = System.getProperties();
            properties.put("mail.smtp.host", mailhost);
            Session session = Session.getInstance(properties, null);
            MimeMessage mimemessage = new MimeMessage(session);
            mimemessage.setFrom(new InternetAddress(from));
            mimemessage.addRecipient(javax.mail.Message.RecipientType.TO, new InternetAddress(to));
            if(cc != null && cc.length() != 0)
            {
                mimemessage.addRecipient(javax.mail.Message.RecipientType.CC, new InternetAddress(cc));
            }
            mimemessage.setSubject(subject);
            MimeBodyPart mimebodypart = new MimeBodyPart();
            StringBuffer stringbuffer = new StringBuffer(24);
            stringbuffer.append("Please find below the status of publish job:").append(jobname).append("\n\n");
            switch(i)
            {
            case 1: // '\001'
                stringbuffer.append("Publish job failed in Step1: Exporting documents to local drive.\n");
                // fall through

            case 2: // '\002'
                stringbuffer.append("Publish job failed in Step2: FTPing documents to target drive.\n");
                // fall through

            case 3: // '\003'
                stringbuffer.append("Publish job failed in Step3: Updating target DB.\n");
                // fall through

            case 4: // '\004'
                stringbuffer.append("Publish job failed in Step4: Updating publishing status.\n");
                // fall through

            default:
                stringbuffer.append("\nPlease find the complete log file at: " + logfilepath + " and file name is: " + logfilename);
                break;
            }
            stringbuffer.append("\n\nNote: This email is generated by an automated job. Contact 1IDMSupport with " + "any questions.\n");
            mimebodypart.setText(stringbuffer.toString());
            MimeMultipart mimemultipart = new MimeMultipart();
            mimemultipart.addBodyPart(mimebodypart);
            mimemessage.setContent(mimemultipart);
            Transport.send(mimemessage);
        }
        catch(Exception exception)
        {
            exception.printStackTrace();
        }
        logger.info("Successfully sent email.");
    }
	
	
}
